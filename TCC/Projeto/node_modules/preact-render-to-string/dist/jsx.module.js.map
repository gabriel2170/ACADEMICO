{"version":3,"file":"jsx.module.js","sources":["../src/polyfills.js","../src/util.js","../src/pretty.js","../src/index.js","../node_modules/pretty-format/printString.js","../node_modules/pretty-format/index.js","../src/jsx.js"],"sourcesContent":["if (typeof Symbol !== 'function') {\r\n\tlet c = 0;\r\n\t// eslint-disable-next-line\r\n\tSymbol = function (s) {\r\n\t\treturn `@@${s}${++c}`;\r\n\t};\r\n\tSymbol.for = (s) => `@@${s}`;\r\n}\r\n","// DOM properties that should NOT have \"px\" added when numeric\r\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\r\nexport const VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/;\r\nexport const UNSAFE_NAME = /[\\s\\n\\\\/='\"\\0<>]/;\r\nexport const XLINK = /^xlink:?./;\r\n\r\nconst ENCODED_ENTITIES = /[\"&<]/;\r\n\r\nexport function encodeEntities(str) {\r\n\t// Ensure we're always parsing and returning a string:\r\n\tstr += '';\r\n\r\n\t// Skip all work for strings with no entities needing encoding:\r\n\tif (ENCODED_ENTITIES.test(str) === false) return str;\r\n\r\n\tlet last = 0,\r\n\t\ti = 0,\r\n\t\tout = '',\r\n\t\tch = '';\r\n\r\n\t// Seek forward in str until the next entity char:\r\n\tfor (; i < str.length; i++) {\r\n\t\tswitch (str.charCodeAt(i)) {\r\n\t\t\tcase 34:\r\n\t\t\t\tch = '&quot;';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38:\r\n\t\t\t\tch = '&amp;';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 60:\r\n\t\t\t\tch = '&lt;';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tcontinue;\r\n\t\t}\r\n\t\t// Append skipped/buffered characters and the encoded entity:\r\n\t\tif (i !== last) out += str.slice(last, i);\r\n\t\tout += ch;\r\n\t\t// Start the next seek/buffer after the entity's offset:\r\n\t\tlast = i + 1;\r\n\t}\r\n\tif (i !== last) out += str.slice(last, i);\r\n\treturn out;\r\n}\r\n\r\nexport let indent = (s, char) =>\r\n\tString(s).replace(/(\\n+)/g, '$1' + (char || '\\t'));\r\n\r\nexport let isLargeString = (s, length, ignoreLines) =>\r\n\tString(s).length > (length || 40) ||\r\n\t(!ignoreLines && String(s).indexOf('\\n') !== -1) ||\r\n\tString(s).indexOf('<') !== -1;\r\n\r\nconst JS_TO_CSS = {};\r\n\r\nconst CSS_REGEX = /([A-Z])/g;\r\n// Convert an Object style to a CSSText string\r\nexport function styleObjToCss(s) {\r\n\tlet str = '';\r\n\tfor (let prop in s) {\r\n\t\tlet val = s[prop];\r\n\t\tif (val != null && val !== '') {\r\n\t\t\tif (str) str += ' ';\r\n\t\t\t// str += jsToCss(prop);\r\n\t\t\tstr +=\r\n\t\t\t\tprop[0] == '-'\r\n\t\t\t\t\t? prop\r\n\t\t\t\t\t: JS_TO_CSS[prop] ||\r\n\t\t\t\t\t  (JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$1').toLowerCase());\r\n\r\n\t\t\tif (typeof val === 'number' && IS_NON_DIMENSIONAL.test(prop) === false) {\r\n\t\t\t\tstr = str + ': ' + val + 'px;';\r\n\t\t\t} else {\r\n\t\t\t\tstr = str + ': ' + val + ';';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn str || undefined;\r\n}\r\n\r\n/**\r\n * Get flattened children from the children prop\r\n * @param {Array} accumulator\r\n * @param {any} children A `props.children` opaque object.\r\n * @returns {Array} accumulator\r\n * @private\r\n */\r\nexport function getChildren(accumulator, children) {\r\n\tif (Array.isArray(children)) {\r\n\t\tchildren.reduce(getChildren, accumulator);\r\n\t} else if (children != null && children !== false) {\r\n\t\taccumulator.push(children);\r\n\t}\r\n\treturn accumulator;\r\n}\r\n\r\nfunction markAsDirty() {\r\n\tthis.__d = true;\r\n}\r\n\r\nexport function createComponent(vnode, context) {\r\n\treturn {\r\n\t\t__v: vnode,\r\n\t\tcontext,\r\n\t\tprops: vnode.props,\r\n\t\t// silently drop state updates\r\n\t\tsetState: markAsDirty,\r\n\t\tforceUpdate: markAsDirty,\r\n\t\t__d: true,\r\n\t\t// hooks\r\n\t\t__h: []\r\n\t};\r\n}\r\n\r\n// Necessary for createContext api. Setting this property will pass\r\n// the context value as `this.context` just for this component.\r\nexport function getContext(nodeName, context) {\r\n\tlet cxType = nodeName.contextType;\r\n\tlet provider = cxType && context[cxType.__c];\r\n\treturn cxType != null\r\n\t\t? provider\r\n\t\t\t? provider.props.value\r\n\t\t\t: cxType.__\r\n\t\t: context;\r\n}\r\n","import {\r\n\tencodeEntities,\r\n\tindent,\r\n\tisLargeString,\r\n\tstyleObjToCss,\r\n\tgetChildren,\r\n\tcreateComponent,\r\n\tgetContext,\r\n\tUNSAFE_NAME,\r\n\tXLINK,\r\n\tVOID_ELEMENTS\r\n} from './util';\r\nimport { options, Fragment } from 'preact';\r\n\r\n// components without names, kept as a hash for later comparison to return consistent UnnamedComponentXX names.\r\nconst UNNAMED = [];\r\n\r\nexport function _renderToStringPretty(\r\n\tvnode,\r\n\tcontext,\r\n\topts,\r\n\tinner,\r\n\tisSvgMode,\r\n\tselectValue\r\n) {\r\n\tif (vnode == null || typeof vnode === 'boolean') {\r\n\t\treturn '';\r\n\t}\r\n\r\n\t// #text nodes\r\n\tif (typeof vnode !== 'object') {\r\n\t\treturn encodeEntities(vnode);\r\n\t}\r\n\r\n\tlet pretty = opts.pretty,\r\n\t\tindentChar = pretty && typeof pretty === 'string' ? pretty : '\\t';\r\n\r\n\tif (Array.isArray(vnode)) {\r\n\t\tlet rendered = '';\r\n\t\tfor (let i = 0; i < vnode.length; i++) {\r\n\t\t\tif (pretty && i > 0) rendered = rendered + '\\n';\r\n\t\t\trendered =\r\n\t\t\t\trendered +\r\n\t\t\t\t_renderToStringPretty(\r\n\t\t\t\t\tvnode[i],\r\n\t\t\t\t\tcontext,\r\n\t\t\t\t\topts,\r\n\t\t\t\t\tinner,\r\n\t\t\t\t\tisSvgMode,\r\n\t\t\t\t\tselectValue\r\n\t\t\t\t);\r\n\t\t}\r\n\t\treturn rendered;\r\n\t}\r\n\r\n\tlet nodeName = vnode.type,\r\n\t\tprops = vnode.props,\r\n\t\tisComponent = false;\r\n\r\n\t// components\r\n\tif (typeof nodeName === 'function') {\r\n\t\tisComponent = true;\r\n\t\tif (opts.shallow && (inner || opts.renderRootComponent === false)) {\r\n\t\t\tnodeName = getComponentName(nodeName);\r\n\t\t} else if (nodeName === Fragment) {\r\n\t\t\tconst children = [];\r\n\t\t\tgetChildren(children, vnode.props.children);\r\n\t\t\treturn _renderToStringPretty(\r\n\t\t\t\tchildren,\r\n\t\t\t\tcontext,\r\n\t\t\t\topts,\r\n\t\t\t\topts.shallowHighOrder !== false,\r\n\t\t\t\tisSvgMode,\r\n\t\t\t\tselectValue\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlet rendered;\r\n\r\n\t\t\tlet c = (vnode.__c = createComponent(vnode, context));\r\n\r\n\t\t\t// options._diff\r\n\t\t\tif (options.__b) options.__b(vnode);\r\n\r\n\t\t\t// options._render\r\n\t\t\tlet renderHook = options.__r;\r\n\r\n\t\t\tif (\r\n\t\t\t\t!nodeName.prototype ||\r\n\t\t\t\ttypeof nodeName.prototype.render !== 'function'\r\n\t\t\t) {\r\n\t\t\t\tlet cctx = getContext(nodeName, context);\r\n\r\n\t\t\t\t// If a hook invokes setState() to invalidate the component during rendering,\r\n\t\t\t\t// re-render it up to 25 times to allow \"settling\" of memoized states.\r\n\t\t\t\t// Note:\r\n\t\t\t\t//   This will need to be updated for Preact 11 to use internal.flags rather than component._dirty:\r\n\t\t\t\t//   https://github.com/preactjs/preact/blob/d4ca6fdb19bc715e49fd144e69f7296b2f4daa40/src/diff/component.js#L35-L44\r\n\t\t\t\tlet count = 0;\r\n\t\t\t\twhile (c.__d && count++ < 25) {\r\n\t\t\t\t\tc.__d = false;\r\n\r\n\t\t\t\t\tif (renderHook) renderHook(vnode);\r\n\r\n\t\t\t\t\t// stateless functional components\r\n\t\t\t\t\trendered = nodeName.call(vnode.__c, props, cctx);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet cctx = getContext(nodeName, context);\r\n\r\n\t\t\t\t// c = new nodeName(props, context);\r\n\t\t\t\tc = vnode.__c = new nodeName(props, cctx);\r\n\t\t\t\tc.__v = vnode;\r\n\t\t\t\t// turn off stateful re-rendering:\r\n\t\t\t\tc._dirty = c.__d = true;\r\n\t\t\t\tc.props = props;\r\n\t\t\t\tif (c.state == null) c.state = {};\r\n\r\n\t\t\t\tif (c._nextState == null && c.__s == null) {\r\n\t\t\t\t\tc._nextState = c.__s = c.state;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tc.context = cctx;\r\n\t\t\t\tif (nodeName.getDerivedStateFromProps)\r\n\t\t\t\t\tc.state = Object.assign(\r\n\t\t\t\t\t\t{},\r\n\t\t\t\t\t\tc.state,\r\n\t\t\t\t\t\tnodeName.getDerivedStateFromProps(c.props, c.state)\r\n\t\t\t\t\t);\r\n\t\t\t\telse if (c.componentWillMount) {\r\n\t\t\t\t\tc.componentWillMount();\r\n\r\n\t\t\t\t\t// If the user called setState in cWM we need to flush pending,\r\n\t\t\t\t\t// state updates. This is the same behaviour in React.\r\n\t\t\t\t\tc.state =\r\n\t\t\t\t\t\tc._nextState !== c.state\r\n\t\t\t\t\t\t\t? c._nextState\r\n\t\t\t\t\t\t\t: c.__s !== c.state\r\n\t\t\t\t\t\t\t? c.__s\r\n\t\t\t\t\t\t\t: c.state;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (renderHook) renderHook(vnode);\r\n\r\n\t\t\t\trendered = c.render(c.props, c.state, c.context);\r\n\t\t\t}\r\n\r\n\t\t\tif (c.getChildContext) {\r\n\t\t\t\tcontext = Object.assign({}, context, c.getChildContext());\r\n\t\t\t}\r\n\r\n\t\t\tif (options.diffed) options.diffed(vnode);\r\n\t\t\treturn _renderToStringPretty(\r\n\t\t\t\trendered,\r\n\t\t\t\tcontext,\r\n\t\t\t\topts,\r\n\t\t\t\topts.shallowHighOrder !== false,\r\n\t\t\t\tisSvgMode,\r\n\t\t\t\tselectValue\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t// render JSX to HTML\r\n\tlet s = '<' + nodeName,\r\n\t\tpropChildren,\r\n\t\thtml;\r\n\r\n\tif (props) {\r\n\t\tlet attrs = Object.keys(props);\r\n\r\n\t\t// allow sorting lexicographically for more determinism (useful for tests, such as via preact-jsx-chai)\r\n\t\tif (opts && opts.sortAttributes === true) attrs.sort();\r\n\r\n\t\tfor (let i = 0; i < attrs.length; i++) {\r\n\t\t\tlet name = attrs[i],\r\n\t\t\t\tv = props[name];\r\n\t\t\tif (name === 'children') {\r\n\t\t\t\tpropChildren = v;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (UNSAFE_NAME.test(name)) continue;\r\n\r\n\t\t\tif (\r\n\t\t\t\t!(opts && opts.allAttributes) &&\r\n\t\t\t\t(name === 'key' ||\r\n\t\t\t\t\tname === 'ref' ||\r\n\t\t\t\t\tname === '__self' ||\r\n\t\t\t\t\tname === '__source')\r\n\t\t\t)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (name === 'defaultValue') {\r\n\t\t\t\tname = 'value';\r\n\t\t\t} else if (name === 'defaultChecked') {\r\n\t\t\t\tname = 'checked';\r\n\t\t\t} else if (name === 'defaultSelected') {\r\n\t\t\t\tname = 'selected';\r\n\t\t\t} else if (name === 'className') {\r\n\t\t\t\tif (typeof props.class !== 'undefined') continue;\r\n\t\t\t\tname = 'class';\r\n\t\t\t} else if (isSvgMode && XLINK.test(name)) {\r\n\t\t\t\tname = name.toLowerCase().replace(/^xlink:?/, 'xlink:');\r\n\t\t\t}\r\n\r\n\t\t\tif (name === 'htmlFor') {\r\n\t\t\t\tif (props.for) continue;\r\n\t\t\t\tname = 'for';\r\n\t\t\t}\r\n\r\n\t\t\tif (name === 'style' && v && typeof v === 'object') {\r\n\t\t\t\tv = styleObjToCss(v);\r\n\t\t\t}\r\n\r\n\t\t\t// always use string values instead of booleans for aria attributes\r\n\t\t\t// also see https://github.com/preactjs/preact/pull/2347/files\r\n\t\t\tif (name[0] === 'a' && name['1'] === 'r' && typeof v === 'boolean') {\r\n\t\t\t\tv = String(v);\r\n\t\t\t}\r\n\r\n\t\t\tlet hooked =\r\n\t\t\t\topts.attributeHook &&\r\n\t\t\t\topts.attributeHook(name, v, context, opts, isComponent);\r\n\t\t\tif (hooked || hooked === '') {\r\n\t\t\t\ts = s + hooked;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (name === 'dangerouslySetInnerHTML') {\r\n\t\t\t\thtml = v && v.__html;\r\n\t\t\t} else if (nodeName === 'textarea' && name === 'value') {\r\n\t\t\t\t// <textarea value=\"a&b\"> --> <textarea>a&amp;b</textarea>\r\n\t\t\t\tpropChildren = v;\r\n\t\t\t} else if ((v || v === 0 || v === '') && typeof v !== 'function') {\r\n\t\t\t\tif (v === true || v === '') {\r\n\t\t\t\t\tv = name;\r\n\t\t\t\t\t// in non-xml mode, allow boolean attributes\r\n\t\t\t\t\tif (!opts || !opts.xml) {\r\n\t\t\t\t\t\ts = s + ' ' + name;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (name === 'value') {\r\n\t\t\t\t\tif (nodeName === 'select') {\r\n\t\t\t\t\t\tselectValue = v;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t// If we're looking at an <option> and it's the currently selected one\r\n\t\t\t\t\t\tnodeName === 'option' &&\r\n\t\t\t\t\t\tselectValue == v &&\r\n\t\t\t\t\t\t// and the <option> doesn't already have a selected attribute on it\r\n\t\t\t\t\t\ttypeof props.selected === 'undefined'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\ts = s + ` selected`;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ts = s + ` ${name}=\"${encodeEntities(v)}\"`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// account for >1 multiline attribute\r\n\tif (pretty) {\r\n\t\tlet sub = s.replace(/\\n\\s*/, ' ');\r\n\t\tif (sub !== s && !~sub.indexOf('\\n')) s = sub;\r\n\t\telse if (pretty && ~s.indexOf('\\n')) s = s + '\\n';\r\n\t}\r\n\r\n\ts = s + '>';\r\n\r\n\tif (UNSAFE_NAME.test(nodeName))\r\n\t\tthrow new Error(`${nodeName} is not a valid HTML tag name in ${s}`);\r\n\r\n\tlet isVoid =\r\n\t\tVOID_ELEMENTS.test(nodeName) ||\r\n\t\t(opts.voidElements && opts.voidElements.test(nodeName));\r\n\tlet pieces = [];\r\n\r\n\tlet children;\r\n\tif (html) {\r\n\t\t// if multiline, indent.\r\n\t\tif (pretty && isLargeString(html)) {\r\n\t\t\thtml = '\\n' + indentChar + indent(html, indentChar);\r\n\t\t}\r\n\t\ts = s + html;\r\n\t} else if (\r\n\t\tpropChildren != null &&\r\n\t\tgetChildren((children = []), propChildren).length\r\n\t) {\r\n\t\tlet hasLarge = pretty && ~s.indexOf('\\n');\r\n\t\tlet lastWasText = false;\r\n\r\n\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\tlet child = children[i];\r\n\r\n\t\t\tif (child != null && child !== false) {\r\n\t\t\t\tlet childSvgMode =\r\n\t\t\t\t\t\tnodeName === 'svg'\r\n\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t: nodeName === 'foreignObject'\r\n\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t: isSvgMode,\r\n\t\t\t\t\tret = _renderToStringPretty(\r\n\t\t\t\t\t\tchild,\r\n\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\topts,\r\n\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t\tchildSvgMode,\r\n\t\t\t\t\t\tselectValue\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\tif (pretty && !hasLarge && isLargeString(ret)) hasLarge = true;\r\n\r\n\t\t\t\t// Skip if we received an empty string\r\n\t\t\t\tif (ret) {\r\n\t\t\t\t\tif (pretty) {\r\n\t\t\t\t\t\tlet isText = ret.length > 0 && ret[0] != '<';\r\n\r\n\t\t\t\t\t\t// We merge adjacent text nodes, otherwise each piece would be printed\r\n\t\t\t\t\t\t// on a new line.\r\n\t\t\t\t\t\tif (lastWasText && isText) {\r\n\t\t\t\t\t\t\tpieces[pieces.length - 1] += ret;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpieces.push(ret);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlastWasText = isText;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpieces.push(ret);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pretty && hasLarge) {\r\n\t\t\tfor (let i = pieces.length; i--; ) {\r\n\t\t\t\tpieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (pieces.length || html) {\r\n\t\ts = s + pieces.join('');\r\n\t} else if (opts && opts.xml) {\r\n\t\treturn s.substring(0, s.length - 1) + ' />';\r\n\t}\r\n\r\n\tif (isVoid && !children && !html) {\r\n\t\ts = s.replace(/>$/, ' />');\r\n\t} else {\r\n\t\tif (pretty && ~s.indexOf('\\n')) s = s + '\\n';\r\n\t\ts = s + `</${nodeName}>`;\r\n\t}\r\n\r\n\treturn s;\r\n}\r\n\r\nfunction getComponentName(component) {\r\n\treturn (\r\n\t\tcomponent.displayName ||\r\n\t\t(component !== Function && component.name) ||\r\n\t\tgetFallbackComponentName(component)\r\n\t);\r\n}\r\n\r\nfunction getFallbackComponentName(component) {\r\n\tlet str = Function.prototype.toString.call(component),\r\n\t\tname = (str.match(/^\\s*function\\s+([^( ]+)/) || '')[1];\r\n\tif (!name) {\r\n\t\t// search for an existing indexed name for the given component:\r\n\t\tlet index = -1;\r\n\t\tfor (let i = UNNAMED.length; i--; ) {\r\n\t\t\tif (UNNAMED[i] === component) {\r\n\t\t\t\tindex = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// not found, create a new indexed name:\r\n\t\tif (index < 0) {\r\n\t\t\tindex = UNNAMED.push(component) - 1;\r\n\t\t}\r\n\t\tname = `UnnamedComponent${index}`;\r\n\t}\r\n\treturn name;\r\n}\r\n","import {\r\n\tencodeEntities,\r\n\tstyleObjToCss,\r\n\tgetContext,\r\n\tcreateComponent,\r\n\tUNSAFE_NAME,\r\n\tXLINK,\r\n\tVOID_ELEMENTS\r\n} from './util';\r\nimport { options, h, Fragment } from 'preact';\r\nimport { _renderToStringPretty } from './pretty';\r\nimport {\r\n\tCOMMIT,\r\n\tCOMPONENT,\r\n\tDIFF,\r\n\tDIFFED,\r\n\tDIRTY,\r\n\tNEXT_STATE,\r\n\tPARENT,\r\n\tRENDER,\r\n\tSKIP_EFFECTS,\r\n\tVNODE,\r\n\tCHILDREN\r\n} from './constants';\r\n\r\n/** @typedef {import('preact').VNode} VNode */\r\n\r\nconst SHALLOW = { shallow: true };\r\n\r\n/** Render Preact JSX + Components to an HTML string.\r\n *\t@name render\r\n *\t@function\r\n *\t@param {VNode} vnode\tJSX VNode to render.\r\n *\t@param {Object} [context={}]\tOptionally pass an initial context object through the render path.\r\n *\t@param {Object} [options={}]\tRendering options\r\n *\t@param {Boolean} [options.shallow=false]\tIf `true`, renders nested Components as HTML elements (`<Foo a=\"b\" />`).\r\n *\t@param {Boolean} [options.xml=false]\t\tIf `true`, uses self-closing tags for elements without children.\r\n *\t@param {Boolean} [options.pretty=false]\t\tIf `true`, adds whitespace for readability\r\n *\t@param {RegExp|undefined} [options.voidElements]       RegeEx that matches elements that are considered void (self-closing)\r\n */\r\nrenderToString.render = renderToString;\r\n\r\n/** Only render elements, leaving Components inline as `<ComponentName ... />`.\r\n *\tThis method is just a convenience alias for `render(vnode, context, { shallow:true })`\r\n *\t@name shallow\r\n *\t@function\r\n *\t@param {VNode} vnode\tJSX VNode to render.\r\n *\t@param {Object} [context={}]\tOptionally pass an initial context object through the render path.\r\n */\r\nlet shallowRender = (vnode, context) => renderToString(vnode, context, SHALLOW);\r\n\r\nconst EMPTY_ARR = [];\r\nfunction renderToString(vnode, context, opts) {\r\n\tcontext = context || {};\r\n\r\n\t// Performance optimization: `renderToString` is synchronous and we\r\n\t// therefore don't execute any effects. To do that we pass an empty\r\n\t// array to `options._commit` (`__c`). But we can go one step further\r\n\t// and avoid a lot of dirty checks and allocations by setting\r\n\t// `options._skipEffects` (`__s`) too.\r\n\tconst previousSkipEffects = options[SKIP_EFFECTS];\r\n\toptions[SKIP_EFFECTS] = true;\r\n\r\n\tconst parent = h(Fragment, null);\r\n\tparent[CHILDREN] = [vnode];\r\n\r\n\tlet res;\r\n\tif (\r\n\t\topts &&\r\n\t\t(opts.pretty ||\r\n\t\t\topts.voidElements ||\r\n\t\t\topts.sortAttributes ||\r\n\t\t\topts.shallow ||\r\n\t\t\topts.allAttributes ||\r\n\t\t\topts.xml ||\r\n\t\t\topts.attributeHook)\r\n\t) {\r\n\t\tres = _renderToStringPretty(vnode, context, opts);\r\n\t} else {\r\n\t\tres = _renderToString(vnode, context, false, undefined, parent);\r\n\t}\r\n\r\n\t// options._commit, we don't schedule any effects in this library right now,\r\n\t// so we can pass an empty queue to this hook.\r\n\tif (options[COMMIT]) options[COMMIT](vnode, EMPTY_ARR);\r\n\toptions[SKIP_EFFECTS] = previousSkipEffects;\r\n\tEMPTY_ARR.length = 0;\r\n\r\n\treturn res;\r\n}\r\n\r\nfunction renderFunctionComponent(vnode, context) {\r\n\tlet rendered,\r\n\t\tc = createComponent(vnode, context),\r\n\t\tcctx = getContext(vnode.type, context);\r\n\r\n\tvnode[COMPONENT] = c;\r\n\r\n\t// If a hook invokes setState() to invalidate the component during rendering,\r\n\t// re-render it up to 25 times to allow \"settling\" of memoized states.\r\n\t// Note:\r\n\t//   This will need to be updated for Preact 11 to use internal.flags rather than component._dirty:\r\n\t//   https://github.com/preactjs/preact/blob/d4ca6fdb19bc715e49fd144e69f7296b2f4daa40/src/diff/component.js#L35-L44\r\n\tlet renderHook = options[RENDER];\r\n\tlet count = 0;\r\n\twhile (c[DIRTY] && count++ < 25) {\r\n\t\tc[DIRTY] = false;\r\n\r\n\t\tif (renderHook) renderHook(vnode);\r\n\r\n\t\t// stateless functional components\r\n\t\trendered = vnode.type.call(c, vnode.props, cctx);\r\n\t}\r\n\r\n\treturn rendered;\r\n}\r\n\r\nfunction renderClassComponent(vnode, context) {\r\n\tlet nodeName = vnode.type,\r\n\t\tcctx = getContext(nodeName, context);\r\n\r\n\t// c = new nodeName(props, context);\r\n\tlet c = new nodeName(vnode.props, cctx);\r\n\tvnode[COMPONENT] = c;\r\n\tc[VNODE] = vnode;\r\n\t// turn off stateful re-rendering:\r\n\tc[DIRTY] = true;\r\n\tc.props = vnode.props;\r\n\tif (c.state == null) c.state = {};\r\n\r\n\tif (c[NEXT_STATE] == null) {\r\n\t\tc[NEXT_STATE] = c.state;\r\n\t}\r\n\r\n\tc.context = cctx;\r\n\tif (nodeName.getDerivedStateFromProps) {\r\n\t\tc.state = assign(\r\n\t\t\t{},\r\n\t\t\tc.state,\r\n\t\t\tnodeName.getDerivedStateFromProps(c.props, c.state)\r\n\t\t);\r\n\t} else if (c.componentWillMount) {\r\n\t\tc.componentWillMount();\r\n\r\n\t\t// If the user called setState in cWM we need to flush pending,\r\n\t\t// state updates. This is the same behaviour in React.\r\n\t\tc.state = c[NEXT_STATE] !== c.state ? c[NEXT_STATE] : c.state;\r\n\t}\r\n\r\n\tlet renderHook = options[RENDER];\r\n\tif (renderHook) renderHook(vnode);\r\n\r\n\treturn c.render(c.props, c.state, c.context);\r\n}\r\n\r\nfunction normalizePropName(name, isSvgMode) {\r\n\tif (name === 'className') {\r\n\t\treturn 'class';\r\n\t} else if (name === 'htmlFor') {\r\n\t\treturn 'for';\r\n\t} else if (name === 'defaultValue') {\r\n\t\treturn 'value';\r\n\t} else if (name === 'defaultChecked') {\r\n\t\treturn 'checked';\r\n\t} else if (name === 'defaultSelected') {\r\n\t\treturn 'selected';\r\n\t} else if (isSvgMode && XLINK.test(name)) {\r\n\t\treturn name.toLowerCase().replace(/^xlink:?/, 'xlink:');\r\n\t}\r\n\r\n\treturn name;\r\n}\r\n\r\nfunction normalizePropValue(name, v) {\r\n\tif (name === 'style' && v != null && typeof v === 'object') {\r\n\t\treturn styleObjToCss(v);\r\n\t} else if (name[0] === 'a' && name[1] === 'r' && typeof v === 'boolean') {\r\n\t\t// always use string values instead of booleans for aria attributes\r\n\t\t// also see https://github.com/preactjs/preact/pull/2347/files\r\n\t\treturn String(v);\r\n\t}\r\n\r\n\treturn v;\r\n}\r\n\r\nconst isArray = Array.isArray;\r\nconst assign = Object.assign;\r\n\r\n/** The default export is an alias of `render()`. */\r\nfunction _renderToString(vnode, context, isSvgMode, selectValue, parent) {\r\n\t// Ignore non-rendered VNodes/values\r\n\tif (vnode == null || vnode === true || vnode === false || vnode === '') {\r\n\t\treturn '';\r\n\t}\r\n\r\n\t// Text VNodes: escape as HTML\r\n\tif (typeof vnode !== 'object') {\r\n\t\treturn encodeEntities(vnode);\r\n\t}\r\n\r\n\t// Recurse into children / Arrays\r\n\tif (isArray(vnode)) {\r\n\t\tlet rendered = '';\r\n\t\tparent[CHILDREN] = vnode;\r\n\t\tfor (let i = 0; i < vnode.length; i++) {\r\n\t\t\trendered =\r\n\t\t\t\trendered +\r\n\t\t\t\t_renderToString(vnode[i], context, isSvgMode, selectValue, parent);\r\n\t\t}\r\n\t\treturn rendered;\r\n\t}\r\n\r\n\tvnode[PARENT] = parent;\r\n\tif (options[DIFF]) options[DIFF](vnode);\r\n\r\n\tlet type = vnode.type,\r\n\t\tprops = vnode.props;\r\n\r\n\t// Invoke rendering on Components\r\n\tconst isComponent = typeof type === 'function';\r\n\tif (isComponent) {\r\n\t\tlet rendered;\r\n\t\tif (type === Fragment) {\r\n\t\t\trendered = props.children;\r\n\t\t} else {\r\n\t\t\tif (type.prototype && typeof type.prototype.render === 'function') {\r\n\t\t\t\trendered = renderClassComponent(vnode, context);\r\n\t\t\t} else {\r\n\t\t\t\trendered = renderFunctionComponent(vnode, context);\r\n\t\t\t}\r\n\r\n\t\t\tlet component = vnode[COMPONENT];\r\n\t\t\tif (component.getChildContext) {\r\n\t\t\t\tcontext = assign({}, context, component.getChildContext());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Recurse into children before invoking the after-diff hook\r\n\t\tconst str = _renderToString(\r\n\t\t\trendered,\r\n\t\t\tcontext,\r\n\t\t\tisSvgMode,\r\n\t\t\tselectValue,\r\n\t\t\tvnode\r\n\t\t);\r\n\r\n\t\tif (options[DIFFED]) options[DIFFED](vnode);\r\n\t\tvnode[PARENT] = undefined;\r\n\r\n\t\tif (options.unmount) options.unmount(vnode);\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t// Serialize Element VNodes to HTML\r\n\tlet s = '<',\r\n\t\tchildren,\r\n\t\thtml;\r\n\r\n\ts = s + type;\r\n\r\n\tif (props) {\r\n\t\tchildren = props.children;\r\n\t\tfor (let name in props) {\r\n\t\t\tlet v = props[name];\r\n\r\n\t\t\tif (\r\n\t\t\t\tname === 'key' ||\r\n\t\t\t\tname === 'ref' ||\r\n\t\t\t\tname === '__self' ||\r\n\t\t\t\tname === '__source' ||\r\n\t\t\t\tname === 'children' ||\r\n\t\t\t\t(name === 'className' && 'class' in props) ||\r\n\t\t\t\t(name === 'htmlFor' && 'for' in props)\r\n\t\t\t) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (UNSAFE_NAME.test(name)) continue;\r\n\r\n\t\t\tname = normalizePropName(name, isSvgMode);\r\n\t\t\tv = normalizePropValue(name, v);\r\n\r\n\t\t\tif (name === 'dangerouslySetInnerHTML') {\r\n\t\t\t\thtml = v && v.__html;\r\n\t\t\t} else if (type === 'textarea' && name === 'value') {\r\n\t\t\t\t// <textarea value=\"a&b\"> --> <textarea>a&amp;b</textarea>\r\n\t\t\t\tchildren = v;\r\n\t\t\t} else if ((v || v === 0 || v === '') && typeof v !== 'function') {\r\n\t\t\t\tif (v === true || v === '') {\r\n\t\t\t\t\tv = name;\r\n\t\t\t\t\ts = s + ' ' + name;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (name === 'value') {\r\n\t\t\t\t\tif (type === 'select') {\r\n\t\t\t\t\t\tselectValue = v;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t// If we're looking at an <option> and it's the currently selected one\r\n\t\t\t\t\t\ttype === 'option' &&\r\n\t\t\t\t\t\tselectValue == v &&\r\n\t\t\t\t\t\t// and the <option> doesn't already have a selected attribute on it\r\n\t\t\t\t\t\t!('selected' in props)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\ts = s + ' selected';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ts = s + ' ' + name + '=\"' + encodeEntities(v) + '\"';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlet startElement = s;\r\n\ts = s + '>';\r\n\r\n\tif (UNSAFE_NAME.test(type)) {\r\n\t\tthrow new Error(`${type} is not a valid HTML tag name in ${s}`);\r\n\t}\r\n\r\n\tlet pieces = '';\r\n\tlet hasChildren = false;\r\n\r\n\tif (html) {\r\n\t\tpieces = pieces + html;\r\n\t\thasChildren = true;\r\n\t} else if (typeof children === 'string') {\r\n\t\tpieces = pieces + encodeEntities(children);\r\n\t\thasChildren = true;\r\n\t} else if (isArray(children)) {\r\n\t\tvnode[CHILDREN] = children;\r\n\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\tlet child = children[i];\r\n\t\t\tif (child != null && child !== false) {\r\n\t\t\t\tlet childSvgMode =\r\n\t\t\t\t\ttype === 'svg' || (type !== 'foreignObject' && isSvgMode);\r\n\t\t\t\tlet ret = _renderToString(\r\n\t\t\t\t\tchild,\r\n\t\t\t\t\tcontext,\r\n\t\t\t\t\tchildSvgMode,\r\n\t\t\t\t\tselectValue,\r\n\t\t\t\t\tvnode\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Skip if we received an empty string\r\n\t\t\t\tif (ret) {\r\n\t\t\t\t\tpieces = pieces + ret;\r\n\t\t\t\t\thasChildren = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (children != null && children !== false && children !== true) {\r\n\t\tvnode[CHILDREN] = [children];\r\n\t\tlet childSvgMode =\r\n\t\t\ttype === 'svg' || (type !== 'foreignObject' && isSvgMode);\r\n\t\tlet ret = _renderToString(\r\n\t\t\tchildren,\r\n\t\t\tcontext,\r\n\t\t\tchildSvgMode,\r\n\t\t\tselectValue,\r\n\t\t\tvnode\r\n\t\t);\r\n\r\n\t\t// Skip if we received an empty string\r\n\t\tif (ret) {\r\n\t\t\tpieces = pieces + ret;\r\n\t\t\thasChildren = true;\r\n\t\t}\r\n\t}\r\n\r\n\tif (options[DIFFED]) options[DIFFED](vnode);\r\n\tvnode[PARENT] = undefined;\r\n\tif (options.unmount) options.unmount(vnode);\r\n\r\n\tif (hasChildren) {\r\n\t\ts = s + pieces;\r\n\t} else if (VOID_ELEMENTS.test(type)) {\r\n\t\treturn startElement + ' />';\r\n\t}\r\n\r\n\treturn s + '</' + type + '>';\r\n}\r\n\r\n/** The default export is an alias of `render()`. */\r\n\r\nrenderToString.shallowRender = shallowRender;\r\n\r\nexport default renderToString;\r\n\r\nexport {\r\n\trenderToString as render,\r\n\trenderToString as renderToStaticMarkup,\r\n\trenderToString,\r\n\tshallowRender\r\n};\r\n","'use strict';\n\nconst ESCAPED_CHARACTERS = /(\\\\|\\\"|\\')/g;\n\nmodule.exports = function printString(val) {\n  return val.replace(ESCAPED_CHARACTERS, '\\\\$1');\n}\n","'use strict';\n\nconst printString = require('./printString');\n\nconst toString = Object.prototype.toString;\nconst toISOString = Date.prototype.toISOString;\nconst errorToString = Error.prototype.toString;\nconst regExpToString = RegExp.prototype.toString;\nconst symbolToString = Symbol.prototype.toString;\n\nconst SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\nconst NEWLINE_REGEXP = /\\n/ig;\n\nconst getSymbols = Object.getOwnPropertySymbols || (obj => []);\n\nfunction isToStringedArrayType(toStringed) {\n  return (\n    toStringed === '[object Array]' ||\n    toStringed === '[object ArrayBuffer]' ||\n    toStringed === '[object DataView]' ||\n    toStringed === '[object Float32Array]' ||\n    toStringed === '[object Float64Array]' ||\n    toStringed === '[object Int8Array]' ||\n    toStringed === '[object Int16Array]' ||\n    toStringed === '[object Int32Array]' ||\n    toStringed === '[object Uint8Array]' ||\n    toStringed === '[object Uint8ClampedArray]' ||\n    toStringed === '[object Uint16Array]' ||\n    toStringed === '[object Uint32Array]'\n  );\n}\n\nfunction printNumber(val) {\n  if (val != +val) return 'NaN';\n  const isNegativeZero = val === 0 && (1 / val) < 0;\n  return isNegativeZero ? '-0' : '' + val;\n}\n\nfunction printFunction(val) {\n  if (val.name === '') {\n    return '[Function anonymous]'\n  } else {\n    return '[Function ' + val.name + ']';\n  }\n}\n\nfunction printSymbol(val) {\n  return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');\n}\n\nfunction printError(val) {\n  return '[' + errorToString.call(val) + ']';\n}\n\nfunction printBasicValue(val) {\n  if (val === true || val === false) return '' + val;\n  if (val === undefined) return 'undefined';\n  if (val === null) return 'null';\n\n  const typeOf = typeof val;\n\n  if (typeOf === 'number') return printNumber(val);\n  if (typeOf === 'string') return '\"' + printString(val) + '\"';\n  if (typeOf === 'function') return printFunction(val);\n  if (typeOf === 'symbol') return printSymbol(val);\n\n  const toStringed = toString.call(val);\n\n  if (toStringed === '[object WeakMap]') return 'WeakMap {}';\n  if (toStringed === '[object WeakSet]') return 'WeakSet {}';\n  if (toStringed === '[object Function]' || toStringed === '[object GeneratorFunction]') return printFunction(val, min);\n  if (toStringed === '[object Symbol]') return printSymbol(val);\n  if (toStringed === '[object Date]') return toISOString.call(val);\n  if (toStringed === '[object Error]') return printError(val);\n  if (toStringed === '[object RegExp]') return regExpToString.call(val);\n  if (toStringed === '[object Arguments]' && val.length === 0) return 'Arguments []';\n  if (isToStringedArrayType(toStringed) && val.length === 0) return val.constructor.name + ' []';\n\n  if (val instanceof Error) return printError(val);\n\n  return false;\n}\n\nfunction printList(list, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  let body = '';\n\n  if (list.length) {\n    body += edgeSpacing;\n\n    const innerIndent = prevIndent + indent;\n\n    for (let i = 0; i < list.length; i++) {\n      body += innerIndent + print(list[i], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n\n      if (i < list.length - 1) {\n        body += ',' + spacing;\n      }\n    }\n\n    body += edgeSpacing + prevIndent;\n  }\n\n  return '[' + body + ']';\n}\n\nfunction printArguments(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  return (min ? '' : 'Arguments ') + printList(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n}\n\nfunction printArray(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  return (min ? '' : val.constructor.name + ' ') + printList(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n}\n\nfunction printMap(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  let result = 'Map {';\n  const iterator = val.entries();\n  let current = iterator.next();\n\n  if (!current.done) {\n    result += edgeSpacing;\n\n    const innerIndent = prevIndent + indent;\n\n    while (!current.done) {\n      const key = print(current.value[0], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n      const value = print(current.value[1], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n\n      result += innerIndent + key + ' => ' + value;\n\n      current = iterator.next();\n\n      if (!current.done) {\n        result += ',' + spacing;\n      }\n    }\n\n    result += edgeSpacing + prevIndent;\n  }\n\n  return result + '}';\n}\n\nfunction printObject(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  const constructor = min ? '' : (val.constructor ?  val.constructor.name + ' ' : 'Object ');\n  let result = constructor + '{';\n  let keys = Object.keys(val).sort();\n  const symbols = getSymbols(val);\n\n  if (symbols.length) {\n    keys = keys\n      .filter(key => !(typeof key === 'symbol' || toString.call(key) === '[object Symbol]'))\n      .concat(symbols);\n  }\n\n  if (keys.length) {\n    result += edgeSpacing;\n\n    const innerIndent = prevIndent + indent;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const name = print(key, indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n      const value = print(val[key], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n\n      result += innerIndent + name + ': ' + value;\n\n      if (i < keys.length - 1) {\n        result += ',' + spacing;\n      }\n    }\n\n    result += edgeSpacing + prevIndent;\n  }\n\n  return result + '}';\n}\n\nfunction printSet(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  let result = 'Set {';\n  const iterator = val.entries();\n  let current = iterator.next();\n\n  if (!current.done) {\n    result += edgeSpacing;\n\n    const innerIndent = prevIndent + indent;\n\n    while (!current.done) {\n      result += innerIndent + print(current.value[1], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n\n      current = iterator.next();\n\n      if (!current.done) {\n        result += ',' + spacing;\n      }\n    }\n\n    result += edgeSpacing + prevIndent;\n  }\n\n  return result + '}';\n}\n\nfunction printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  refs = refs.slice();\n  if (refs.indexOf(val) > -1) {\n    return '[Circular]';\n  } else {\n    refs.push(val);\n  }\n\n  currentDepth++;\n\n  const hitMaxDepth = currentDepth > maxDepth;\n\n  if (!hitMaxDepth && val.toJSON && typeof val.toJSON === 'function') {\n    return print(val.toJSON(), indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  }\n\n  const toStringed = toString.call(val);\n  if (toStringed === '[object Arguments]') {\n    return hitMaxDepth ? '[Arguments]' : printArguments(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  } else if (isToStringedArrayType(toStringed)) {\n    return hitMaxDepth ? '[Array]' : printArray(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  } else if (toStringed === '[object Map]') {\n    return hitMaxDepth ? '[Map]' : printMap(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  } else if (toStringed === '[object Set]') {\n    return hitMaxDepth ? '[Set]' : printSet(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  } else if (typeof val === 'object') {\n    return hitMaxDepth ? '[Object]' : printObject(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  }\n}\n\nfunction printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  let match = false;\n  let plugin;\n\n  for (let p = 0; p < plugins.length; p++) {\n    plugin = plugins[p];\n\n    if (plugin.test(val)) {\n      match = true;\n      break;\n    }\n  }\n\n  if (!match) {\n    return false;\n  }\n\n  function boundPrint(val) {\n    return print(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  }\n\n  function boundIndent(str) {\n    const indentation = prevIndent + indent;\n    return indentation + str.replace(NEWLINE_REGEXP, '\\n' + indentation);\n  }\n\n  return plugin.print(val, boundPrint, boundIndent, {\n    edgeSpacing: edgeSpacing,\n    spacing: spacing\n  });\n}\n\nfunction print(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min) {\n  const basic = printBasicValue(val);\n  if (basic) return basic;\n\n  const plugin = printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n  if (plugin) return plugin;\n\n  return printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min);\n}\n\nconst DEFAULTS = {\n  indent: 2,\n  min: false,\n  maxDepth: Infinity,\n  plugins: []\n};\n\nfunction validateOptions(opts) {\n  Object.keys(opts).forEach(key => {\n    if (!DEFAULTS.hasOwnProperty(key)) {\n      throw new Error('prettyFormat: Invalid option: ' + key);\n    }\n  });\n\n  if (opts.min && opts.indent !== undefined && opts.indent !== 0) {\n    throw new Error('prettyFormat: Cannot run with min option and indent');\n  }\n}\n\nfunction normalizeOptions(opts) {\n  const result = {};\n\n  Object.keys(DEFAULTS).forEach(key =>\n    result[key] = opts.hasOwnProperty(key) ? opts[key] : DEFAULTS[key]\n  );\n\n  if (result.min) {\n    result.indent = 0;\n  }\n\n  return result;\n}\n\nfunction createIndent(indent) {\n  return new Array(indent + 1).join(' ');\n}\n\nfunction prettyFormat(val, opts) {\n  if (!opts) {\n    opts = DEFAULTS;\n  } else {\n    validateOptions(opts)\n    opts = normalizeOptions(opts);\n  }\n\n  let indent;\n  let refs;\n  const prevIndent = '';\n  const currentDepth = 0;\n  const spacing = opts.min ? ' ' : '\\n';\n  const edgeSpacing = opts.min ? '' : '\\n';\n\n  if (opts && opts.plugins.length) {\n    indent = createIndent(opts.indent);\n    refs = [];\n    var pluginsResult = printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, opts.maxDepth, currentDepth, opts.plugins, opts.min);\n    if (pluginsResult) return pluginsResult;\n  }\n\n  var basicResult = printBasicValue(val);\n  if (basicResult) return basicResult;\n\n  if (!indent) indent = createIndent(opts.indent);\n  if (!refs) refs = [];\n  return printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, opts.maxDepth, currentDepth, opts.plugins, opts.min);\n}\n\nmodule.exports = prettyFormat;\n","import './polyfills';\r\nimport renderToString from './index';\r\nimport { indent, encodeEntities } from './util';\r\nimport prettyFormat from 'pretty-format';\r\n\r\n// we have to patch in Array support, Possible issue in npm.im/pretty-format\r\nlet preactPlugin = {\r\n\ttest(object) {\r\n\t\treturn (\r\n\t\t\tobject &&\r\n\t\t\ttypeof object === 'object' &&\r\n\t\t\t'type' in object &&\r\n\t\t\t'props' in object &&\r\n\t\t\t'key' in object\r\n\t\t);\r\n\t},\r\n\tprint(val, print, indent) {\r\n\t\treturn renderToString(val, preactPlugin.context, preactPlugin.opts, true);\r\n\t}\r\n};\r\n\r\nlet prettyFormatOpts = {\r\n\tplugins: [preactPlugin]\r\n};\r\n\r\nfunction attributeHook(name, value, context, opts, isComponent) {\r\n\tlet type = typeof value;\r\n\r\n\t// Use render-to-string's built-in handling for these properties\r\n\tif (name === 'dangerouslySetInnerHTML') return false;\r\n\r\n\t// always skip null & undefined values, skip false DOM attributes, skip functions if told to\r\n\tif (value == null || (type === 'function' && !opts.functions)) return '';\r\n\r\n\tif (\r\n\t\topts.skipFalseAttributes &&\r\n\t\t!isComponent &&\r\n\t\t(value === false ||\r\n\t\t\t((name === 'class' || name === 'style') && value === ''))\r\n\t)\r\n\t\treturn '';\r\n\r\n\tlet indentChar = typeof opts.pretty === 'string' ? opts.pretty : '\\t';\r\n\tif (type !== 'string') {\r\n\t\tif (type === 'function' && !opts.functionNames) {\r\n\t\t\tvalue = 'Function';\r\n\t\t} else {\r\n\t\t\tpreactPlugin.context = context;\r\n\t\t\tpreactPlugin.opts = opts;\r\n\t\t\tvalue = prettyFormat(value, prettyFormatOpts);\r\n\t\t\tif (~value.indexOf('\\n')) {\r\n\t\t\t\tvalue = `${indent('\\n' + value, indentChar)}\\n`;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn indent(`\\n${name}={${value}}`, indentChar);\r\n\t}\r\n\treturn `\\n${indentChar}${name}=\"${encodeEntities(value)}\"`;\r\n}\r\n\r\nlet defaultOpts = {\r\n\tattributeHook,\r\n\tjsx: true,\r\n\txml: false,\r\n\tfunctions: true,\r\n\tfunctionNames: true,\r\n\tskipFalseAttributes: true,\r\n\tpretty: '  '\r\n};\r\n\r\nfunction renderToJsxString(vnode, context, opts, inner) {\r\n\topts = Object.assign({}, defaultOpts, opts || {});\r\n\treturn renderToString(vnode, context, opts, inner);\r\n}\r\n\r\nexport default renderToJsxString;\r\nexport { renderToJsxString as render };\r\n"],"names":["Symbol","c","s","IS_NON_DIMENSIONAL","VOID_ELEMENTS","UNSAFE_NAME","XLINK","ENCODED_ENTITIES","encodeEntities","str","test","last","i","out","ch","length","charCodeAt","slice","indent","char","String","replace","isLargeString","ignoreLines","indexOf","JS_TO_CSS","CSS_REGEX","styleObjToCss","prop","val","toLowerCase","undefined","getChildren","accumulator","children","Array","isArray","reduce","push","markAsDirty","this","__d","createComponent","vnode","context","__v","props","setState","forceUpdate","__h","getContext","nodeName","cxType","contextType","provider","__c","value","__","UNNAMED","_renderToStringPretty","opts","inner","isSvgMode","selectValue","pretty","indentChar","rendered","component","type","isComponent","shallow","renderRootComponent","Fragment","shallowHighOrder","options","__b","renderHook","__r","prototype","render","cctx","_dirty","state","_nextState","__s","getDerivedStateFromProps","Object","assign","componentWillMount","count","call","getChildContext","diffed","displayName","Function","name","toString","match","index","getFallbackComponentName","propChildren","html","attrs","keys","sortAttributes","sort","v","allAttributes","hooked","attributeHook","__html","xml","selected","sub","Error","isVoid","voidElements","pieces","hasLarge","lastWasText","child","ret","isText","join","substring","SHALLOW","renderToString","EMPTY_ARR","previousSkipEffects","res","parent","h","_renderToString","normalizePropName","normalizePropValue","renderClassComponent","renderFunctionComponent","unmount","startElement","hasChildren","shallowRender","ESCAPED_CHARACTERS","toISOString","Date","errorToString","regExpToString","RegExp","symbolToString","SYMBOL_REGEXP","NEWLINE_REGEXP","getSymbols","getOwnPropertySymbols","obj","isToStringedArrayType","toStringed","printFunction","printSymbol","printError","printBasicValue","typeOf","printNumber","printString","min","constructor","printList","list","prevIndent","spacing","edgeSpacing","refs","maxDepth","currentDepth","plugins","body","innerIndent","print","printComplexValue","hitMaxDepth","toJSON","printArguments","printArray","result","iterator","entries","current","next","done","printMap","printSet","symbols","filter","key","concat","printObject","printPlugin","plugin","p","indentation","DEFAULTS","Infinity","createIndent","preactPlugin","object","prettyFormatOpts","defaultOpts","functions","skipFalseAttributes","functionNames","forEach","hasOwnProperty","validateOptions","normalizeOptions","pluginsResult","prettyFormat","jsx","renderToJsxString"],"mappings":"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"}