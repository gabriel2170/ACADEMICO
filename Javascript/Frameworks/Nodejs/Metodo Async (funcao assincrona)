
-podemos usar o async em uma function para tornala uma funcao assincrona de forma que ela pode ser execultada ao mesmo tempo que outras funcoes forem execultadas
-o try catch funciona assim, ele vai tentar execultar um metodo ou funcao , se der certo ele retorna o resultado , mas se der errado ele vai retornar um erro atravez do catch (error)
-e esse metodo de astnc pode ser utilizado principalmente com funcoes Promise pois repara que o metodo reject que utilizamos para verificar se o que esta sendo passado na variavel x é ou nao um numero , estara direcionado no erro do try e catch abaixo
-de forma que o (error) armazenara o reject e a funcao soma() o resolve
-o await serve para que uma funcao aguarde caso ela apresentar algum erro 


function soma(x){
    return new Promise((resolve, reject)=>{
        if(Number(x) == NaN || undefined || typeof(x) != 'number'){
            reject('Nao é numero')
        }
        setTimeout(() => {
            resolve(x + 5000)
        }, 2000); 
    })
}
    

async function main(){
    try {
        const res = await soma(2555)
        console.log(res)
    } catch (error) {
        console.log(`${error}`)
    }
    
}

main()


