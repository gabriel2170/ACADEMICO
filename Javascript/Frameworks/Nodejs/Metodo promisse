-ao invez de uma funcao callback para interpretar uma funcao dentro de outra funcao , podemos utilizar o metodo promise
-onde o promise seria uma forma de falar para o algoritmo que vc esta prometendo que vai resolver a funcao mesmo que demande mais tempo que o esperado
-o metodo promise Ã© declarado como um objeto usando o new e ele vai 2 parametros, o resolve que vai armazenar o resultado e o reject que serveria para rejeitar o metodo se houver erro
-repara que usamos o resolve no lugar do return apos o setTimeout pois ele vai retornar o parametro diretamente para esse atributo resolve ao invez de retornar para a funcao
-e logo apos chamar a funcao soma repara que utilizamos o metodo then para pegar o resultado armazenado no resolve e depois reproduzi-lo num console.log
-podemos dizer que o then seria algo a ser execultado apos o retorno da funcao soma


function soma(x){
    return new Promise((resolve, reject)=>{
        setTimeout(() => {
            resolve(x + 5000)
        }, 2000); 
    })
}
    


soma(850)
.then((resultado)=>{
    console.log(resultado)
})


